---

# FIXME: this is not the right spot for this
# NOTE(curtis): Networking in the controller-0 vm will break thanks to docker
# if this is not set. See https://github.com/docker/for-linux/issues/103
- name: fix docker breaking nat networking for virtual machines
  iptables:
    chain: FORWARD
    jump: ACCEPT

#NOTE(curtis): for some reason this isn't an issue with localhost as the repo
- name: install daemon.json for insecure registries
  copy:
    dest: "/etc/docker/daemon.json"
    content: |
      {
        "insecure-registries" : ["{{ container_registry }}"]
      }
  notify: restart docker

- name: flush handlers
  meta: flush_handlers

#TODO: ensure not listening on external IP
- name: ensure docker registry container is running
  docker_container:
    name: registry
    image: registry:2
    state: started
    ports:
     - "{{ container_registry }}:5000"

- name: ensure stx container images directory exists 
  file:
    path: "{{ container_images_dir }}"
    state: "directory"

# FIXME: better check here
- name: check if tgz images already exist 
  shell: ls {{ container_images_dir }}/*.tgz
  register: ls_container_images
  ignore_errors: True

#NOTE(curtis): I created this image file that contains all necessary images
- name: download and unarchive container images tar file
  unarchive:
    src: "{{ container_images_tar_file_url }}"
    dest: "{{ container_images_dir }}"
    remote_src: True
    creates: "{{ container_images_dir }}/images.txt"
  when: ls_container_images.rc != 0

# NOTE(curtis): If I use the short name then every time this runs any images
# that are from a non-dockerhub repo are marked as changed, and don't get
# the short name anyways. I was hoping to do this in one step, but it seems
# like have to first load the images then push them.
- name: load images from tgz files to local docker
  docker_image:
    name: "{{ item.name }}"
    tag: "{{ item.tag }}"
    load_path: "{{ container_images_dir }}/{{ item.file_name }}"
  with_items: "{{ container_images }}"

- name: tag images in local docker and push to local registry
  docker_image:
     name: "{{ item.name }}"
     repository: "{{ container_registry }}/{{ item.short_name }}"
     tag: "{{ item.tag }}"
     push: yes
  with_items: "{{ container_images }}"