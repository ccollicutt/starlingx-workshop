---

- name: setup message of the day
  copy:
    dest: "/etc/motd"
    content: |
      **************************************************************************
      #                                                                        #
      #      This system is only for use during a StarlingX workshop.          #
      #                                                                        #
      **************************************************************************

- name: disable metadata warnings 
  copy:
    dest: "/var/lib/cloud/instance/warnings/.skip"
    content: ""

- name: allow password ssh logins
  lineinfile:
    path: /etc/ssh/sshd_config
    regexp: '^#PasswordAuthentication yes'
    line: 'PasswordAuthentication yes'
    backrefs: yes
  notify: restart ssh

- name: ensure sudo group users can sudo without a password
  lineinfile:
    dest: /etc/sudoers
    state: present
    regexp: "^%sudo"
    line: "%sudo ALL=(ALL) NOPASSWD: ALL"
    validate: "visudo -cf %s"

# NOTE: inventory_hostname is the public IP
- name: generate a predictable "password"
  shell: echo {{ inventory_hostname }} | md5sum | cut -c1-10
  register: hostname_as_password

- name: set password as a fact
  set_fact:
    hostname_as_password: "{{ hostname_as_password.stdout | trim }}"

- name: ensure a student users exists
  user:
    name: "{{ student_name }}"
    password: "{{ hostname_as_password  | password_hash('sha512', 'insecuresalt') }}"
    groups: 
     - sudo
    shell: "/bin/bash"
    state: present

# FIXME: better way to do this
- name: test ssh connectivity for user 
  shell: sshpass -p {{ hostname_as_password }} ssh {{ student_name }}@{{ inventory_hostname }} hostname
  delegate_to: localhost

# FIXME: should delegate and just run once
- name: create a file that contains all access information
  template:
    src: "access.txt"
    dest: "/tmp/access.txt"

- name: fetch /tmp/access.txt
  fetch:
    src: "/tmp/access.txt"
    dest: "./access.txt"
    flat: True
  run_once: True

